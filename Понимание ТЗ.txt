      
              1   Сущности (таблицы)

1. Products (Номенклатура)
   id, name, number, price, category_id

2. Каталог номенклатуры\дерево категорий
   Хранить данные о категориях товара. 
   У категорий неограниченный уровень вложенности.
   Можно добавлять категории любого уровня вложенности.
   Максимальный уровень вложенности неизвестен.

   Categories
   id, parent_id, name

3. Clients
   id, name, adress 

4. Orders    
   id, client_id, datetime, sum

5. OrderProducts
   order_id, product_id, product_count    
          - (order_id + product_id) - составной первичный ключ (уникальность)
          - они же поодиночке внешние ключи (обеспечивают целостность данных)



             Отношения между сущностями:
Клиент - Заказ   (один ко многим)
Заказ - Товар    (многие ко многим)



##############################################
                    
                 2    SQl запросы

- SQl запросы 
  1 'Получение информации о сумме товаров заказанных под каждого клиента (Наименование клиента, сумма)'
     #
     Если правильно понял задание 'общая сумма трат клиента' 
     #
     SELECT Clients.Name as Client_name, SUM(Orders.Sum) as Client_sum
     FROM Orders 
     LEFT JOIN Clients
     ON Orders.Client_id = Clients.Id
     WHERE Clients.Id = 1

     ГОТОВО?
     


  2 'Все дочерние элементы первого уровня вложенности по id категории'
     Имена из таблицы категорий. 

     понял задание как: По id элемента любого уровня можно получить все его дочерние элементы 
     
     неправильно (?) понял и нужны элементы где parent_id == null                     !ДЕЛАТЬ
                                                
     сделать переменную для @id                          !ДЕЛАТЬ

     with recursive r as (
    select
      id, parent_id, name
    from Categories
    where id = 12
  union
    select
      cc.id, cc.parent_id, cc.name
    from Categories as cc
    join r
      on cc.parent_id = r.id
)
select id, name from r where id <> 12;


     ТУТ НУЖНО КОЛИЧЕСТВО (ОДНО ЧИСЛО)                            !ДЕЛАТЬ


  3 'Запрос для отчета (view) «Топ-5 самых покупаемых товаров за
     последний месяц» (по количеству штук в заказах). В отчете должны быть:
     Наименование товара, Категория 1-го уровня, Общее количество проданных штук'

     Сделать получение категории                 !ДЕЛАТЬ
     объединить с запросом

     CREATE VIEW IF NOT EXISTS top_5_products_last_month_23_10_2025 AS
     SELECT Name, Count(*) * Product_count AS Result_count
     FROM Orders
     JOIN OrderProducts ON Orders.Id = OrderProducts.Order_id
     JOIN Products ON OrderProducts.Product_id = Products.Id
     WHERE Orders.Created_at > DATETIME('now', '-30 day')
     GROUP BY Product_id
     ORDER BY Result_count DESC LIMIT 5;

     Добавить:
        - вытащить категорию 




  4 как запрос выше можно улучшить?
    https://sky.pro/wiki/sql/optimizatsiya-struktury-dereva-v-baze-dannykh-luchshie-praktiki/


###############################################

           3   сервис 'Добавление товара в заказ'

                  - Fast API (метод написать)
                
                Осталось:

                1) async
                2) есть ли товар в заказе
                

curl -X PUT -H "Content-Type: application/json" http://127.0.0.1:8000/add_product_to_order -d "{\"order_id\": 1, \"product_id\": 2, \"product_count\": 3}"





#############################   Не понимаю   ################################################

 1 Дерево категорий
   Требуется в виде таблицы.
   Как её делать? Это sql или python?
   Как её дополнять\удалять?
   Как она связана с другими таблицами (видимо, только с Товаром)?

 2 Даталогическая схема   (диаграмма ==  ER-диаграмма ?)
   Где её делать (MS Server?)
   Всё сделать в sqlite, потом ещё раз создать в ms server только для схемы, т.е. не заполнять?

 3 jstree - сделать?

##############################  To do  ################################################
   
1, null, Бытовая_техника
2, 1, Для кухни
3, 2, Холодильное оборудование
4, 3, Аксeссуары к холодильникам
5, 4, формы для льда и мороженного
6, 4, полки, поддоны и корзины
7, 4, фильтры для холодильника

8, 1, Для дома
9, 8, Глаженье
10, 9, Утюги
11, 9, Парогенераторы

12, null, Смартфоны и фототехника
13, 12, Смартфоны и гаджеты
14, 13, Смартфоны
15, 12, Планшеты и электронные книги
16, 15, Планшеты



  1 продумать товары, категории, вложенность, возможность добавления
   Создать и заполнить БД
   #
   - Бытовая техника
      -- Для кухни
          --- Холодильное оборудование
              ---- Аксeссуары к холодильникам
                   ----- формы для льда и мороженного
                         ------ форма_для_льда_ХОРС_красная
                         ------ форма_для_льда_ХОРС_синяя
                   ----- полки, поддоны и корзины
                         ------ органайзер_Berossi_белый
                         ------ органайзер_Berossi_синий
                   ----- фильтры для холодильника
                         ------ Dena_5_фильтров
                         ------ Dena_10_фильтров
      -- Для дома
         --- Глаженье
             ---- Утюги
                  ----- Braun
                  ----- Tefal
             ---- Парогенераторы
                  ----- Polaris
                  ----- Philips

   - Смартфоны и фототехника
      -- Смартфоны и гаджеты
         --- Смартфоны
             ---- Apple
             ---- Samsung
             ---- Xiaomi
      -- Планшеты и электронные книги
         --- Планшеты
             ---- 11" Apple iPad
             ---- 11" Honor Pad
             ---- 11" Samsung Tab


 


  2 SQL запросы 
   Сделать
  
  3 сервис 'Добавление товара в заказ' (т.е. методы FastAPI)

  4 пункт 2 сделать как методы
  

