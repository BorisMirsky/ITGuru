Как завести проект с Fast API.


Создание виртуального окружения.
Предполагаем, что Python >=3.5 и библиотека virtualenv уже установлены. 
Затем надо склонировать проект в локальную папку. Перейти в папку проекта и создать 
виртуальное окружение 'python -m venv itguru_env'. Перейти в itguru_env\Scripts и запустить 
виртуальное окружение командой activate. Находясь в виртуальном окружении вызвать команду 
'pip install -r requirments.txt'.


Запуск локального сервера.
Перейти в папку проекта 'app', выполнить в терминале команду 'uvicorn main:app --reload'


Открыть консоль (terminal, cmd, PowerShell) и скопировать туда команду:
curl -X PUT -H "Content-Type: application/json" http://127.0.0.1:8000/add_product_to_order -d "{\"order_id\": 1, \"product_id\": 2, \"product_count\": 3}"


Программа писалась под Windows, поэтому параметры метода экранированы обратными слешами!
"{\"order_id\": 1, \"product_id\": 2, \"product_count\": 3}"


В папке database лежит готовая БД с занесёнными данными, можно погонять скрипт.
Количество заказов = 21, товаров = 13, количество разных товаров от 1 2до 94.


##############################   SQL   ###################################


1. Получение информации о сумме товаров заказанных под каждого клиента (Наименование клиента, сумма)

В SQLite нет возможности явно задать переменную (типа DECLARE), поэтому id клиента добавляем вручную в последней строке.
Всего в БД 3 клиента.

SELECT Clients.Name as Client_name, SUM(Orders.Order_sum) as Client_sum
FROM Orders 
LEFT JOIN Clients
ON Orders.Client_id = Clients.Id
WHERE Clients.Id = 3



2. Найти количество дочерних элементов первого уровня вложенности для категорий номенклатуры.

Не уверен, что правильно понял задание, поэтому сделал в двух вариантах:

2.1 По id категории найти количество (одно число) дочерних категорий.
    Переменных в SQLite нет, поэтому категорию ставим вручную в двух местах.
    В приложенной БД 2 категории первого уровня вложенности - №№1 и 12

WITH RECURSIVE R AS (
    SELECT
      id, parent_id, name
    FROM Categories
    WHERE id = 1
  UNION
    SELECT
      cc.id, cc.parent_id, cc.name
    FROM Categories as cc
    JOIN r
      ON cc.parent_id = r.id
)
SELECT COUNT(*) FROM r WHERE id <> 1;


2.2 Для всех категорий первого уровня (т.е. не имеющих parent) найти количество дочерних категорий.
Вернуть имя категории первого уровня и количество дочерних









