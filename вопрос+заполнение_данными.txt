Есть игрушечная БД SQLite с таблицами:

`Products`: `id`, `name`, `number`, `price`, `category_id`.

`Orders`: `id`, `client_id`, `datetime`, `sum`.

`OrderProducts`: `order_id`, `product_id`, `product_count`.

`Categories`: `id`, `parent_id`, `name`.

`CLients`: `id`, `name`, `address`.

Есть задание:

'Сделать представление (view) «Топ-5 самых покупаемых товаров за
последний месяц» (по количеству штук в заказах). В отчете должны быть:
Наименование товара, Категория 1-го уровня, Общее количество проданных штук'.

Код написал, работает ок (строку про VIEW убрал).

```
SELECT Products.Name, Count(*) * Product_count AS Result_count, Parent_id
FROM Orders
JOIN OrderProducts ON Orders.Id = OrderProducts.Order_id
JOIN Products ON OrderProducts.Product_id = Products.Id
JOIN Categories ON Categories.Id = Products.Category_id
WHERE Orders.Created_at > DATETIME('now', '-30 day')
GROUP BY Product_id
ORDER BY Result_count DESC LIMIT 5;
```

Как мне сюда прикрутить получение самой верхней родительской категории?

Умею делать получение дочерних элементов через рекурсивный запрос, но как в обратную сторону не понимаю.









###################################################################################################







INSERT INTO Categories(Id, Parent_id, Name, Number) VALUES 
(1, null, 'Бытовая_техника', null),
(2, 1, 'Для кухни', 1),
(3, 2, 'Холодильное оборудование', 1),
(4, 3, 'Аксeссуары к холодильникам', 1),
(5, 4, 'формы для льда и мороженного', 1),
(6, 4, 'полки, поддоны и корзины', 2),
(7, 4, 'фильтры для холодильника', 3),
(8, 1, 'Для дома', 2),
(9, 8, 'Глаженье', 1),
(10, 9, 'Утюги', 1),
(11, 9, 'Парогенераторы', 2),
(12, null, 'Смартфоны и фототехника', null),
(13, 12, 'Смартфоны и гаджеты', 1),
(14, 13, 'Смартфоны', 1),
(15, 12, 'Планшеты и электронные книги', 2),
(16, 15, 'Планшеты', 1)


INSERT INTO Products(Id, Name, Count, Price, Category_id) VALUES 
(1, 'Форма для льда ХОРС 1', 100, 200, 5),
(2, 'Форма для льда ХОРС 2', 40, 350, 5),
(3, 'Органайзер BEROSSI Berkana', 78, 450, 6),
(4, 'Органайзер UBBO ODP-4-U', 15, 220, 6),
(5, 'Фильтр осушитель для компрессора холодильника, 5 штук', 35, 415, 7),
(6, 'Фильтр осушитель для компрессора холодильника, 10 штук', 44, 800, 7),
(7, 'Утюг Polaris PIR 2420AK', 55, 3800, 10),
(8, 'Утюг Braun TexStyle 9 SI9661VI', 35, 7200, 10),
(9, 'Парогенератор Philips GC9682', 15, 59300, 11),
(10, '6.9" Смартфон Apple iPhone 16 Pro Max', 77, 122000, 14),
(11, '6.9" Смартфон Samsung Galaxy S25', 33, 98800, 14),
(12, '11" Планшет Apple iPad (11th Gen)', 33, 40000, 16),
(13, '11" Планшет Xiaomi REDMI Pad 2 LTE', 55, 21000, 16)     450+660+415


INSERT INTO OrderProducts(Order_id, Product_id, Product_count) VALUES 
(1, 1, 1),
(1, 6, 1),
(2, 8, 1),
(3, 12, 1),
(3, 13, 2),
(4, 3, 1),
(4, 4, 3),
(4, 5, 1),
(5, 9, 1),
(6, 13, 1),
(7, 11, 1),
(8, 8, 2),
(9, 10, 1),
(9, 11, 1),
(10, 13, 3),
(11, 10, 1),
(11, 11, 1),
(12, 10, 1),
(13, 10, 2),
(14, 11, 2),
(15, 11, 2),
(15, 12, 1),
(16, 6, 4),
(17, 8, 1),
(17, 9, 1),
(18, 5, 1),
(18, 6, 1),
(18, 7, 1),
(19, 11, 3),
(20, 1, 1),
(20, 2, 1),
(20, 3, 3),
(20, 4, 3),
(21, 5, 2)


INSERT INTO Orders(Id, Client_id, Datetime, Sum) VALUES 
(1, 1, '2025-05-01', 1000),
(2, 1, '2025-08-02', 7200),
(3, 1, '2025-27-03', 82000),
(4, 1, '2025-02-04', 1525),
(5, 1, '2025-04-04', 59300),
(6, 1, '2025-12-04', 21000),
(7, 1, '2025-23-04', 98800),
(8, 1, '2025-21-05', 14400),
(9, 1, '2025-02-07', 220800),
(10, 1, '2025-07-09', 63000),
(11, 2, '2025-02-07', 220800),
(12, 2, '2025-15-07', 122000),
(13, 2, '2025-01-08', 244000),
(14, 2, '2025-29-09', 197600),
(15, 2, '2025-03-10', 237600),
(16, 2, '2025-21-10', 3200),
(17, 3, '2025-01-09', 66500),
(18, 3, '2025-11-09', 5015),
(19, 3, '2025-03-10', 296400),
(20, 3, '2025-14-10', 2560)